class Solution
{
        void merge(int arr[], int l, int mid, int r) {
            int i = l; 
            int j = mid + 1; 
            int k = 0; 
            int temp[] = new int[r-l+1];
            while (i <= mid && j <= r) {
                if (arr[i] <= arr[j]) {
                    temp[k] = arr[i];
                    i++;
                } 
                else{
                    temp[k] = arr[j];
                    j++;
                }
                k++;
            }
            while (j <= r) {
                temp[k] = arr[j];
                k++;
                j++;
            }
            while (i <= mid) {
                temp[k] = arr[i];
                k++;
                i++;
            }
            k=0;
            for (int q = l; q <= r; q++) {
                arr[q] = temp[k];
                k++;
            }
        }
        void mergeSort(int arr[], int l, int r) {
            if (l < r) {
                int mid = (l + r) / 2;
                mergeSort(arr, l, mid); 
                mergeSort(arr, mid + 1, r); 
                merge(arr, l, mid, r); 
            }
       }
}
